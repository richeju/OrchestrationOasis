---
- name: Create Jenkins service directory
  ansible.builtin.file:
    path: "{{ jenkins_service_dir }}"
    state: directory
    mode: '0755'

- name: Create Jenkins data directory
  ansible.builtin.file:
    path: "{{ jenkins_data_dir }}"
    state: directory
    mode: '0755'

- name: Generate Docker Compose file for Jenkins
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ jenkins_service_dir }}/docker-compose.yml"
    mode: '0644'

- name: Start Jenkins with Docker Compose
  community.docker.docker_compose:
    project_src: "{{ jenkins_service_dir }}"
    state: present
    pull: yes
    recreate: smart

- name: Wait for Jenkins to be ready
  ansible.builtin.wait_for:
    port: "{{ jenkins_port | int }}"
    delay: 30
    timeout: 300

- name: Install required Jenkins plugins
  jenkins_plugin:
    name: "{{ item }}"
    state: present
  loop:
    - github
    - git
    - workflow-aggregator  # For Jenkins Pipelines
    - credentials  # Github Tokens
  become: yes
  become_user: jenkins
  vars:
    ansible_python_interpreter: /usr/bin/python3

- name: Configure Jenkins to connect to GitHub
  ansible.builtin.template:
    src: config.xml.j2
    dest: "{{ jenkins_data_dir }}/config.xml"
    mode: '0644'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  notify: Restart Jenkins

- name: Ensure Jenkins is running after configuration
  community.docker.docker_compose:
    project_src: "{{ jenkins_service_dir }}"
    state: present
    pull: no
    recreate: smart

  handlers:
    - name: Restart Jenkins
      community.docker.docker_compose:
        project_src: "{{ jenkins_service_dir }}"
        state: present
        recreate: smart
