# yamllint disable-file

- name: "Kill existing rclone processes (if any)"
  ansible.builtin.command: "pkill -9 rclone"
  changed_when: false
  failed_when: false

- name: "Attempt fusermount unmount"
  ansible.builtin.command: "fusermount -u /mnt/pcloud"
  changed_when: false
  failed_when: false

- name: "Attempt lazy unmount"
  ansible.builtin.command: "umount -l /mnt/pcloud"
  changed_when: false
  failed_when: false

- name: "Attempt force unmount"
  ansible.builtin.command: "umount -f /mnt/pcloud"
  changed_when: false
  failed_when: false

- name: "Remove corrupted mountpoint (if needed)"
  ansible.builtin.file:
    path: /mnt/pcloud
    state: absent

- name: "Recreate mountpoint"
  ansible.builtin.file:
    path: /mnt/pcloud
    state: directory
    owner: root
    group: pcloud_users
    mode: "0770"

- name: "Create directory for rclone config"
  ansible.builtin.file:
    path: /etc/rclone
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: "Configure rclone credentials file"
  ansible.builtin.template:
    src: rclone.conf.j2
    dest: /etc/rclone/rclone.conf
    owner: root
    group: root
    mode: "0600"

- name: "Create log file for rclone"
  ansible.builtin.file:
    path: /var/log/rclone.log
    state: touch
    owner: root
    group: root
    mode: "0644"

- name: "Create rclone cache directory"
  ansible.builtin.file:
    path: /var/cache/rclone
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: "Generate rclone-pcloud systemd service"
  ansible.builtin.template:
    src: rclone-pcloud.service.j2
    dest: /etc/systemd/system/rclone-pcloud.service
    owner: root
    group: root
    mode: "0644"

- name: "Reload systemd daemon"
  ansible.builtin.systemd:
    daemon_reload: true

- name: "Ensure pCloud mountpoint is healthy before starting"
  ansible.builtin.stat:
    path: /mnt/pcloud
  register: pcloud_mountpoint

- name: "Fail if pcloud is not mounted or inaccessible"
  ansible.builtin.fail:
    msg: "/mnt/pcloud is not properly mounted. Aborting before damaging remote storage."
  when: not pcloud_mountpoint.stat.exists or pcloud_mountpoint.stat.isdir is not defined

- name: "Enable and start rclone-pcloud service"
  ansible.builtin.systemd:
    name: rclone-pcloud.service
    state: restarted
    enabled: true
